openapi: 3.0.0
info:
  title: Cloud Resource Janitor
  description: |
    Janitor service to cleanup cloud resources created by Terra CRL.
  version: 0.0.0

# This file has extra dependencies from: https://github.com/DataBiosphere/terra-cloud-resource-lib/blob/master/cloud-resource-schema/src/main/resources/cloud_resources_uid.yaml
servers:
  - url: /

paths:
  '/status':
    get:
      description: |
        Returns the operational status of the service
      operationId: serviceStatus
      tags:
        - unauthenticated
      responses:
        200:
          description: Service is functional
          $ref: '#/components/responses/StatusResponse'
        500:
          description: Service is broken
          $ref: '#/components/responses/StatusResponse'

  # TODO configure this to only be callable by Kubernetes in production and to be hooked to Pod termination.
  '/shutdown':
    get:
      description: |
        Signals that this instance will be shutdown soon. Allows graceful termination to leave less
        recovery work to be done.  In production, this must be configured to only be callable by Kubernetes.
      operationId: shutdownRequest
      tags:
        - unauthenticated
      responses:
        204:
          description: The service was shutdown successfully
      security: []

  '/api/janitor/v1/resource':
    post:
      description: |
        Create a new tracked resource.
      operationId: createResource
      tags:
        - janitor
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateResourceRequestBody'
      responses:
        200:
          description: Ok
          $ref: '#/components/responses/CreateResponse'
        400:
          description: Bad request - invalid id, badly formed
          $ref: '#/components/responses/ErrorResponse'
        403:
          description: Permission denied
          $ref: '#/components/responses/ErrorResponse'
        500:
          description: Creation request error
          $ref: '#/components/responses/ErrorResponse'

  # TODO(yonghao): remove temporrary placeholder endpoint
  '/api/janitor/v1/resource/{id}':
    parameters:
      - $ref: '#/components/parameters/Id'
    get:
      description: |
        Get the resource by id.
      operationId: getResource
      tags:
        - janitor
      responses:
        200:
          description: OK
          $ref: '#/components/responses/GetResponse'
        500:
          description: Get request error
          $ref: '#/components/responses/ErrorResponse'

components:
  parameters:
    Id:
      name: id
      in: path
      description: A UUID to used to identify an object in the janitor
      required: true
      schema:
        type: string

  schemas:
    ErrorReport:
      type: object
      properties:
        message:
          type: string
        statusCode:
          type: integer
        causes:
          type: array
          items:
            type: string

    SystemStatus:
      type: object
      properties:
        ok:
          type: boolean
          description: status of this service
        systems:
          type: object
          additionalProperties:
            type: object
            properties:
              ok:
                type: boolean
              messages:
                type: array
                items:
                  type: string

    CreateResourceRequestBody:
      type: object
      required:
        - resourceUid
        - timeToLiveInMinutes
        - creation
      properties:
        resourceUid:
          # CloudResourceUid is referred from CRL's cloud-resource-schema.
          $ref: '../../../../build/crlSchema/cloud_resources_uid.yaml#/components/schemas/CloudResourceUid'
        labels:
          description: The labels for the resource
          type: object
          additionalProperties:
            type: string
        creation:
          description: The time when the resource is created.
          type: string
          format: 'date-time'
        timeToLiveInMinutes:
          description: How long created resources should live (at least) before being cleaned up in minutes.
          type: integer
          format: int32

    CreatedResource:
      type: object
      properties:
        id:
          type: string
          description: UUID of a newly-created tracked resource

    ResourceDescription:
      type: object
      properties:
        id:
          description: The ID of the resource
          type: string

  responses:
    ErrorResponse:
      description: common error response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorReport'

    StatusResponse:
      description: common status response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SystemStatus'

    CreateResponse:
      description: Response to Create calls
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreatedResource'

    GetResponse:
      description: Response to Get calls
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResourceDescription'
