openapi: 3.0.0
info:
  title: Cloud Resource Janitor
  description: |
    Janitor service to cleanup cloud resources created by Terra CRL.
  version: 0.0.0

# This file has extra dependencies from: https://github.com/DataBiosphere/terra-cloud-resource-lib/blob/master/cloud-resource-schema/src/main/resources/cloud_resources_uid.yaml
servers:
  - url: /

security:
  - googleoauth:
      - openid
      - email
      - profile
  - bearerAuth: []

paths:
  '/status':
    get:
      security: []
      description: |
        Returns the operational status of the service
      operationId: serviceStatus
      tags:
        - unauthenticated
      responses:
        200:
          description: Service is functional
          $ref: '#/components/responses/StatusResponse'
        500:
          description: Service is broken
          $ref: '#/components/responses/StatusResponse'

  # TODO(PF-57) Add a shutdown to only be callable by Kubernetes in production and to be hooked to Pod termination.

  '/api/janitor/v1/resource':
    post:
      description: |
        Create a new tracked resource.
      operationId: createResource
      tags:
        - janitor
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateResourceRequestBody'
      responses:
        200:
          description: Ok
          $ref: '#/components/responses/CreateResponse'
        400:
          description: Bad request - invalid id, badly formed
          $ref: '#/components/responses/ErrorResponse'
        403:
          description: Permission denied
          $ref: '#/components/responses/ErrorResponse'
        500:
          description: Creation request error
          $ref: '#/components/responses/ErrorResponse'
    get:
      description: |
        Return tracked resources matching the request filters
      operationId: getResources
      tags:
        - janitor
      parameters:
        - name: cloudResourceUid
          in: query
          description: The cloud resource uid of the tracked resources.
          required: true
          schema:
            $ref: '../../../../build/crlSchema/cloud_resources_uid.yaml#/components/schemas/CloudResourceUid'
      responses:
        200:
          description: OK
          $ref: '#/components/responses/GetResourcesResponse'
        403:
          description: Permission denied
          $ref: '#/components/responses/ErrorResponse'
    put:
      description: |
        Update tracked resources, currently it supports update resource state to ABANDON or READY(Bump)
      operationId: updateResource
      tags:
        - janitor
      parameters:
        - name: cloudResourceUid
          in: query
          description: The cloud resource uid of the tracked resources.
          required: true
          schema:
            $ref: '../../../../build/crlSchema/cloud_resources_uid.yaml#/components/schemas/CloudResourceUid'
        - name: state
          in: query
          description: What state to set the resources, i.e. ABANDON or READY.
          required: true
          schema:
            $ref: '#/components/schemas/ResourceState'
      responses:
        204:
          description: Resource is updated successfully
        400:
          description: bad cloudResourceUid or state
          $ref: '#/components/responses/ErrorResponse'
        403:
          description: Permission denied
          $ref: '#/components/responses/ErrorResponse'
        404:
          description: Resource not found for the id.
        500:
          description: Update request error
          $ref: '#/components/responses/ErrorResponse'

  '/api/janitor/v1/resource/{id}':
    parameters:
      - $ref: '#/components/parameters/Id'
    get:
      description: |
        Get the resource by Janitor UUID.
      operationId: getResource
      tags:
        - janitor
      responses:
        200:
          description: OK
          $ref: '#/components/responses/GetResourceResponse'
        403:
          description: Permission denied
          $ref: '#/components/responses/ErrorResponse'
        404:
          description: Resource not found for the id.
        500:
          description: Get request error
          $ref: '#/components/responses/ErrorResponse'

components:
  parameters:
    Id:
      name: id
      in: path
      description: A UUID to used to identify an object in the Janitor
      required: true
      schema:
        type: string

  schemas:
    ErrorReport:
      type: object
      properties:
        message:
          type: string
        statusCode:
          type: integer
        causes:
          type: array
          items:
            type: string

    SystemStatus:
      type: object
      properties:
        ok:
          type: boolean
          description: status of this service
        systems:
          type: object
          additionalProperties:
            type: object
            properties:
              ok:
                type: boolean
              messages:
                type: array
                items:
                  type: string

    CreateResourceRequestBody:
      type: object
      required:
        - resourceUid
        - creation
        - expiration
      properties:
        resourceUid:
          # CloudResourceUid is referred from CRL's cloud-resource-schema.
          $ref: '../../../../build/crlSchema/cloud_resources_uid.yaml#/components/schemas/CloudResourceUid'
        labels:
          description: The labels for the resource
          type: object
          additionalProperties:
            type: string
        creation:
          description: The resource creation time
          type: string
          format: 'date-time'
          example: '2020-01-13T12:59:26+00:00'
        expiration:
          description: The resource expiration time
          type: string
          format: 'date-time'
          example: '2020-01-14T12:59:26+00:00'

    CreatedResource:
      type: object
      properties:
        id:
          type: string
          description: UUID of a newly-created tracked resource

    TrackedResourceInfo:
      type: object
      description: Information about a resource tracked for cleanup.
      properties:
        id:
          description: The Janitor UUID of the tracked resource.
          type: string
        resourceUid:
          description: The CloudResourceUid of the tracked resource.
          $ref: '../../../../build/crlSchema/cloud_resources_uid.yaml#/components/schemas/CloudResourceUid'
        state:
          description: The state of the tracked resource's cleanup.
          type: string
        creation:
          description: When the Janitor started tracking this resource.
          type: string
          format: date-time
        expiration:
          description: When the resource expires and can be cleaned up.
          type: string
          format: date-time
        labels:
          description: The labels for the tracked resource
          type: object
          additionalProperties:
            type: string

    TrackedResourceInfoList:
      type: object
      description: A list of tracked resources.
      properties:
        resources:
          type: array
          items:
            $ref: '#/components/schemas/TrackedResourceInfo'

    ResourceState:
      type: string
      description: Supported state to update a resource.
      enum:
        - READY
        - ABANDONED

  responses:
    ErrorResponse:
      description: common error response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorReport'

    StatusResponse:
      description: common status response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SystemStatus'

    CreateResponse:
      description: Response to Create calls
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreatedResource'

    GetResourceResponse:
      description: Response to getResource calls
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TrackedResourceInfo'

    GetResourcesResponse:
      description: Response to getResources calls
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TrackedResourceInfoList'

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
    authorization:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            openid: open id authorization
            email: email authorization
            profile: profile authorization
